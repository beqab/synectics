import React, { useContext, useRef } from "react";
import StepsContainer from "../common/stepsContainer";
import { PriceCalculatorContext } from "../priceContainerContext";

function TextArea({
  title,
  description,
  stepKey,
}: {
  title: string;
  description: string;
  stepKey: string;
}) {
  const { values, setValues } = useContext(PriceCalculatorContext);

  const value = values[stepKey] ? values[stepKey] : { text: "", files: [] };
  const fileRef = useRef(null);

  return (
    <StepsContainer title={title} description={description}>
      <div className="stepTextarea">
        <span
          onClick={() => {
            fileRef?.current?.click();
          }}
        >
          <svg
            className="pointer"
            width="40"
            height="40"
            viewBox="0 0 40 40"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <rect
              width="40"
              height="40"
              rx="20"
              fill="#1C55E9"
              fill-opacity="0.12"
            />
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M21.25 10.7725C20.9109 10.7515 20.4656 10.75 19.7782 10.75H19.5C18.3249 10.75 17.4811 10.7504 16.8153 10.7958C16.1562 10.8408 15.7264 10.9274 15.3736 11.0735C14.3322 11.5049 13.5049 12.3322 13.0735 13.3736C12.9274 13.7264 12.8408 14.1562 12.7958 14.8153C12.7504 15.4811 12.75 16.3249 12.75 17.5V18C12.75 18.4142 12.4142 18.75 12 18.75C11.5858 18.75 11.25 18.4142 11.25 18V17.5V17.4722C11.25 16.3309 11.25 15.436 11.2993 14.7132C11.3495 13.9777 11.4532 13.3656 11.6877 12.7996C12.2713 11.3907 13.3907 10.2713 14.7996 9.68771C15.3656 9.45324 15.9777 9.34951 16.7132 9.29933C17.436 9.25001 18.3309 9.25001 19.4722 9.25001H19.5H19.7782L19.8699 9.25001C20.9147 9.24989 21.5579 9.24983 22.1736 9.38635C22.8284 9.53152 23.4526 9.79011 24.0183 10.1504C24.5502 10.4893 25.0049 10.9441 25.7437 11.683L25.8085 11.7479L26.1872 12.1265L26.2572 12.1966L26.2572 12.1966C27.0552 12.9944 27.5466 13.4857 27.9027 14.0667C28.2179 14.5812 28.4503 15.1421 28.5911 15.7288C28.7502 16.3914 28.7501 17.0862 28.75 18.2147L28.75 18.3137V22V22.0336V22.0336C28.75 23.4053 28.75 24.4807 28.6794 25.3451C28.6075 26.2252 28.4586 26.9523 28.1233 27.6105C27.572 28.6924 26.6924 29.572 25.6104 30.1233C24.9523 30.4586 24.2252 30.6075 23.3451 30.6794C22.4807 30.75 21.4053 30.75 20.0336 30.75H20.0336H20H19.5H19.4722C18.3309 30.75 17.436 30.75 16.7132 30.7007C15.9777 30.6505 15.3656 30.5468 14.7996 30.3123C13.3907 29.7287 12.2713 28.6094 11.6877 27.2004C11.4532 26.6344 11.3495 26.0223 11.2993 25.2868C11.25 24.564 11.25 23.6691 11.25 22.5279V22.5V22C11.25 21.5858 11.5858 21.25 12 21.25C12.4142 21.25 12.75 21.5858 12.75 22V22.5C12.75 23.6751 12.7504 24.5189 12.7958 25.1847C12.8408 25.8438 12.9274 26.2736 13.0735 26.6264C13.5049 27.6678 14.3322 28.4952 15.3736 28.9265C15.7264 29.0726 16.1562 29.1592 16.8153 29.2042C17.4811 29.2496 18.3249 29.25 19.5 29.25H20C21.4125 29.25 22.4268 29.2494 23.2229 29.1844C24.0103 29.1201 24.518 28.9964 24.9295 28.7868C25.7291 28.3793 26.3793 27.7292 26.7868 26.9295C26.9964 26.518 27.12 26.0103 27.1844 25.2229C27.2494 24.4268 27.25 23.4125 27.25 22V18.3137C27.25 17.0551 27.2452 16.548 27.1326 16.0789C27.0285 15.6453 26.8567 15.2307 26.6237 14.8505C26.3717 14.4392 26.0165 14.0772 25.1265 13.1872L24.7478 12.8085C23.9239 11.9845 23.5888 11.6554 23.2123 11.4155C23.0634 11.3207 22.909 11.2353 22.75 11.1599V14C22.75 14.6904 23.3096 15.25 24 15.25H25C25.4142 15.25 25.75 15.5858 25.75 16C25.75 16.4143 25.4142 16.75 25 16.75H24C22.4812 16.75 21.25 15.5188 21.25 14V10.7725ZM19.4697 18.4698C19.7626 18.1769 20.2374 18.1769 20.5303 18.4698L23.0303 20.9698C23.3232 21.2627 23.3232 21.7376 23.0303 22.0305C22.7374 22.3234 22.2626 22.3234 21.9697 22.0305L20.75 20.8108V25.0001C20.75 25.4143 20.4142 25.7501 20 25.7501C19.5858 25.7501 19.25 25.4143 19.25 25.0001V20.8108L18.0303 22.0305C17.7374 22.3234 17.2626 22.3234 16.9697 22.0305C16.6768 21.7376 16.6768 21.2627 16.9697 20.9698L19.4697 18.4698Z"
              fill="#1C55E9"
            />
          </svg>
          <input
            onChange={(e) => {
              console.log(e.target.files, "e.target.files");
              // setImage(URL.createObjectURL(e.target.files[0]));

              const toBase64 = (file) =>
                new Promise((resolve, reject) => {
                  const reader = new FileReader();
                  reader.readAsDataURL(file);
                  reader.onload = () => resolve(reader.result);
                  reader.onerror = (error) => reject(error);
                });

              async function Main() {
                const file = e.target.files[0];
                let fileString = await toBase64(file);
                setValues({
                  ...values,
                  [stepKey]: {
                    ...value,
                    files: [
                      ...value.files,
                      { name: e.target.files[0].name, fileString },
                    ],
                  },
                });
                // ProfileService.uploadImage({
                //   base64: fileString,
                // })
                //   .then((res) => {
                //     let newUSer = {
                //       ...user,
                //       profile_image: res.data.profileImage,
                //     };
                //     dispatch(setCurrentUser({ user: newUSer }));
                //   })
                //   .catch((err) => {
                //     console.log(err);
                //   });
              }

              Main();
            }}
            className="d-none"
            ref={fileRef}
            type="file"
          />
        </span>
        <textarea
          value={value.text}
          onChange={(e) => {
            setValues({
              ...values,
              [stepKey]: {
                ...value,
                text: e.target.value,
              },
            });
          }}
          placeholder="About your Project"
        ></textarea>
      </div>
      <div className="stepUploadedFiles">
        {value?.files.map((el) => {
          return (
            <span>
              {el.name}
              <svg
                onClick={() => {
                  setValues({
                    ...values,
                    [stepKey]: {
                      ...value,
                      files: [
                        ...value.files.filter((item) => item.name !== el.name),
                      ],
                    },
                  });
                }}
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M10.0019 0.917016L9.83806 0.917004C7.8233 0.916784 6.63083 0.916653 5.63884 1.22943C3.53848 1.89167 1.89325 3.53689 1.23101 5.63725C0.91824 6.62924 0.91837 7.82171 0.918591 9.83647L0.918602 10.0003L0.918591 10.1642C0.91837 12.179 0.91824 13.3715 1.23101 14.3634C1.89325 16.4638 3.53848 18.109 5.63884 18.7713C6.63083 19.084 7.82329 19.0839 9.83804 19.0837L10.0019 19.0837L10.1658 19.0837C12.1806 19.0839 13.373 19.084 14.365 18.7713C16.4654 18.109 18.1106 16.4638 18.7729 14.3634C19.0856 13.3715 19.0855 12.179 19.0853 10.1642L19.0853 10.0003L19.0853 9.83646C19.0855 7.8217 19.0856 6.62924 18.7729 5.63725C18.1106 3.53689 16.4654 1.89167 14.365 1.22943C13.373 0.916653 12.1806 0.916784 10.1658 0.917004L10.0019 0.917016ZM6.0899 2.66C6.8328 2.42577 7.77404 2.41702 10.0019 2.41702C12.2298 2.41702 13.1711 2.42577 13.914 2.66C15.5476 3.17508 16.8272 4.4547 17.3423 6.08831C17.5765 6.83121 17.5853 7.77246 17.5853 10.0003C17.5853 12.2282 17.5765 13.1695 17.3423 13.9124C16.8272 15.546 15.5476 16.8256 13.914 17.3407C13.1711 17.5749 12.2298 17.5837 10.0019 17.5837C7.77404 17.5837 6.8328 17.5749 6.0899 17.3407C4.45629 16.8256 3.17666 15.546 2.66159 13.9124C2.42735 13.1695 2.4186 12.2282 2.4186 10.0003C2.4186 7.77246 2.42735 6.83121 2.66159 6.08831C3.17666 4.4547 4.45629 3.17508 6.0899 2.66ZM7.19893 6.13668C6.90604 5.84379 6.43117 5.84379 6.13827 6.13668C5.84538 6.42958 5.84538 6.90445 6.13827 7.19734L8.94128 10.0003L6.13827 12.8034C5.84538 13.0962 5.84538 13.5711 6.13827 13.864C6.43117 14.1569 6.90604 14.1569 7.19893 13.864L10.0019 11.061L12.8049 13.864C13.0978 14.1569 13.5727 14.1569 13.8656 13.864C14.1585 13.5711 14.1585 13.0962 13.8656 12.8034L11.0626 10.0003L13.8656 7.19734C14.1585 6.90445 14.1585 6.42958 13.8656 6.13668C13.5727 5.84379 13.0978 5.84379 12.8049 6.13668L10.0019 8.93969L7.19893 6.13668Z"
                  fill="#F02E51"
                />
              </svg>
            </span>
          );
        })}
      </div>
      <button
        onClick={() => {
          console.log(value, "valueeee");
        }}
        className="btn"
      >
        click
      </button>
    </StepsContainer>
  );
}

export default TextArea;
